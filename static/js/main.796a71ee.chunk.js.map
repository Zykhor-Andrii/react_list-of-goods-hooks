{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","reverse","sort","a","b","ALPHABET","localeCompare","LENGTH","length","App","useState","setReverse","NONE","setSortType","className","onClick","type","classNames","current","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcF,SAASC,EACPC,EADF,GAGG,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GA2BzB,OAzBIE,GACFC,EAAaC,UAGfD,EAAaE,MAAK,SAACC,EAAWC,GAC5B,GAAIN,IAAaJ,EAASW,UAAYN,EACpC,OAAOK,EAAEE,cAAcH,GAGzB,GAAIL,IAAaJ,EAASa,QAAUR,EAClC,OAAOK,EAAEI,OAASL,EAAEK,OAGtB,OAAQV,GACN,KAAKJ,EAASW,SACZ,OAAOF,EAAEG,cAAcF,GAEzB,KAAKV,EAASa,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OAEtB,QACE,OAAO,MAINR,G,SA1CJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA6CE,IAAMe,EAAgC,WAC3C,MAAiCC,oBAAS,GAA1C,mBAAOX,EAAP,KAAmBY,EAAnB,KAEA,EAAgCD,mBAAShB,EAASkB,MAAlD,mBAAOd,EAAP,KAAiBe,EAAjB,KAEA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UAEE,wBACEC,QAAS,WACPF,EAAYnB,EAASW,WAEvBW,KAAK,SACLF,UAAWG,IACT,iBACA,CAAE,WAAYnB,IAAaJ,EAASW,WAPxC,iCAaA,wBACEU,QAAS,WACPF,EAAYnB,EAASa,SAEvBS,KAAK,SACLF,UAAWG,IACT,oBACA,CAAE,WAAYnB,IAAaJ,EAASa,SAPxC,4BAaA,wBACEQ,QAAS,WACPJ,GAAW,SAAAO,GAAO,OAAKA,MAEzBF,KAAK,SACLF,UAAWG,IACT,oBACA,CAAE,YAAalB,IAPnB,sBAcGA,GAAcD,IAAaJ,EAASkB,OACnC,wBACEG,QAAS,WACPJ,GAAW,GACXE,EAAYnB,EAASkB,OAEvBI,KAAK,SACLF,UAAU,4BANZ,sBAeN,6BACE,6BAEIlB,EAAkBD,EAAiB,CAAEG,WAAUC,eAC5CoB,KAAI,SAACC,GAAD,OACH,oBACE,UAAQ,OADV,SAIGA,GAFIA,cCpIvBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.796a71ee.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nfunction getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  visibleGoods.sort((a: string, b: string) => {\n    if (sortType === SortType.ALPHABET && isReversed) {\n      return b.localeCompare(a);\n    }\n\n    if (sortType === SortType.LENGTH && isReversed) {\n      return b.length - a.length;\n    }\n\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return a.localeCompare(b);\n\n      case SortType.LENGTH:\n        return a.length - b.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  return visibleGoods;\n}\n\nexport const App: React.FC<ReorderOptions> = () => {\n  const [isReversed, setReverse] = useState(false);\n\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n\n        <button\n          onClick={() => {\n            setSortType(SortType.ALPHABET);\n          }}\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => {\n            setSortType(SortType.LENGTH);\n          }}\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => {\n            setReverse(current => !current);\n          }}\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n        >\n          Reverse\n        </button>\n\n        {\n          (isReversed || sortType !== SortType.NONE) && (\n            <button\n              onClick={() => {\n                setReverse(false);\n                setSortType(SortType.NONE);\n              }}\n              type=\"button\"\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          )\n        }\n\n      </div>\n\n      <ul>\n        <ul>\n          {\n            getReorderedGoods(goodsFromServer, { sortType, isReversed })\n              .map((good) => (\n                <li\n                  data-cy=\"Good\"\n                  key={good}\n                >\n                  {good}\n                </li>\n              ))\n          }\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}